name: Build, Test FastAPI Backend with MySQL

on:
  push:
    branches:
      - main  # Runs on push to main branch

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u ${{ secrets.DB_USER }} --password=${{ secrets.DB_PASSWORD }}" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up" && exit 0
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL failed to start" && exit 1

      - name: Set Environment Variables (Using GitHub Secrets)
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV

      - name: Run Tests
        run: pytest  # Run tests

      - name: Build Docker Image (for Validation)
        run: docker build -t fastapi-backend:latest .


# jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
 #   steps:
  #    - name: Checkout Repository
   #     uses: actions/checkout@v3

 #     - name: Set up Python
  #      uses: actions/setup-python@v4
   #     with:
    #      python-version: "3.9"

     # - name: Install Dependencies
      #  run: |
       #   python -m pip install --upgrade pip
        #  pip install -r requirements.txt

  #    - name: Run Tests 
   #     run: |
    #      pytest  # Run tests 

     # - name: Deploy to Hostinger VPS via SSH
      #  uses: appleboy/ssh-action@master
       # with:
        #  host: ${{ secrets.HOSTINGER_IP }}
        # username: ${{ secrets.HOSTINGER_USER }}
       #   key: ${{ secrets.HOSTINGER_SSH_KEY }}
       #   script: |
        #    cd /home/yourusername/yourproject
        #    git pull origin main
        #    docker-compose down
        #    docker-compose up -d --build